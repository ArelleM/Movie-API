openapi: 3.0.0
info:
  description: "Example REST API"
  title: "The Movies API"
  version: "0.1.0"
servers:
- url: "https://api.example.com"
paths:
  /movies:
    post:
      operationId: "addMovie"
      requestBody: 
          description: "Movie to be added"
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
      responses:
        201:
          description: "movie created"
        422:
          description: "Problems with your request"
    get:
      operationId: "listMovies"
      responses:
        200:
          description: "The list of movies"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/Movies"
            application/json:
              schema:
                $ref: "#/components/schemas/Movies"
  /movies/{id}:
    get:
      operationId: "getMovie"
      parameters: 
      - name: "id"
        in: path
        required: true
        description: "id of the movie"
        schema:
          type: string
      responses:
        200:
          description: "the movie"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
  /movies/{movieId}/critics:
    post:
    get:
      operationId: "listCriticsFromMovie"
  /movies/{movieId}/critics/criticId}:
    get:
      operationId: "getCriticFromMovie"
      parameters: 
      - name: "movieId"
        in: path
        required: true
        description: "id of the movie"
        schema:
          type: string
      - name: "criticId"
        in: path
        required: true
        description: "id of the critic"
        schema:
          type: string
components:
  schemas:
    Movie:
      type: "object"
      required: 
        - title
        - pitch
        - poster
        - trailer
        - actors
      properties:
        title:
          type: "string"
        pitch:
          type: "string"
        poster:
          type: "string"
        trailer:
          type: "string"
        director:
          type: "array"
          items:
            $ref: "#/components/schemas/Directors"
        actors:
          type: "array"
          items:
            $ref: "#/components/schemas/Actors"
        critics:
          type: "array"
          items:
            $ref: '#/components/schemas/Critics'
        rate:
          type: "array"
          items:
            $ref: '#/components/schemas/Rates'
    Movies:
      type: "array"
      items:
        $ref: "#/components/schemas/Movie"
    Director:
      type: "object"
      required: 
        - name
        - photo
        - country
        - bio
        - birthday
        - movies
      properties:
        name:
          type: "string"
        photo:
          type: "string"
        country:
          type: "string"
        bio:
          type: "string"
        birthday:
          type: "string"
          format: "date"
        movies:
          type: "array"
          items:
            $ref: "#/components/schemas/Movies"
    Directors:
      type: "array"
      items:
        $ref: "#/components/schemas/Director"
    Actor:
      type: "object"
      required: 
        - name
        - photo
        - country
        - bio
        - birthday
        - movies
      properties:
        name:
          type: "string"
        photo:
          type: "string"
        country:
          type: "string"
        bio:
          type: "string"
        birthday:
          type: "string"
          format: "date"
        movies:
          type: "array"
          items:
            $ref: "#/components/schemas/Movies"
    Actors:
      type: "array"
      items:
        $ref: "#/components/schemas/Actor"
    Critic:
      type: "object"
      required: 
        - content
        - movie
      properties:
        content:
          type: "string"
        movie: 
          type: "array"
          items:
            $ref: "#/components/schemas/Movie"
    Critics:
      type: "array"
      items:
        $ref: "#/components/schemas/Critic"
    Rate:
      type: "object"
      required: 
        - value
        - movie
      properties:
        value:
          type: "integer"
        movie: 
          type: "array"
          items:
            $ref: "#/components/schemas/Movie"
    Rates:
      type: "array"
      items:
        $ref: "#/components/schemas/Rate"
        
      


          
